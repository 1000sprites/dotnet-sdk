// ------------------------------------------------------------
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
// ------------------------------------------------------------

namespace Dapr.Client
{
    using grpc = global::Grpc.Core;

    using Autogenerated = Autogen.Grpc.v1;
    /// <summary>
    /// This class is only needed if the app you are calling is listening on HTTP.
    /// It contains propertes that represent data may be populated for an HTTP receiver.
    /// </summary>
    public abstract class BaseDaprClient
    {
         /// <summary>
      /// Invokes a method on a remote Dapr app.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.InvokeResponse InvokeService(global::Dapr.Client.Autogen.Grpc.v1.InvokeServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Invokes a method on a remote Dapr app.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.InvokeResponse InvokeService(global::Dapr.Client.Autogen.Grpc.v1.InvokeServiceRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Invokes a method on a remote Dapr app.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.InvokeResponse> InvokeServiceAsync(global::Dapr.Client.Autogen.Grpc.v1.InvokeServiceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Invokes a method on a remote Dapr app.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.InvokeResponse> InvokeServiceAsync(global::Dapr.Client.Autogen.Grpc.v1.InvokeServiceRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetStateResponse GetState(global::Dapr.Client.Autogen.Grpc.v1.GetStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Gets the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetStateResponse GetState(global::Dapr.Client.Autogen.Grpc.v1.GetStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetStateResponse> GetStateAsync(global::Dapr.Client.Autogen.Grpc.v1.GetStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Gets the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetStateResponse> GetStateAsync(global::Dapr.Client.Autogen.Grpc.v1.GetStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets a bulk of state items for a list of keys
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateResponse GetBulkState(global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Gets a bulk of state items for a list of keys
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateResponse GetBulkState(global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets a bulk of state items for a list of keys
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateResponse> GetBulkStateAsync(global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Gets a bulk of state items for a list of keys
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateResponse> GetBulkStateAsync(global::Dapr.Client.Autogen.Grpc.v1.GetBulkStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Saves the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty SaveState(global::Dapr.Client.Autogen.Grpc.v1.SaveStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Saves the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty SaveState(global::Dapr.Client.Autogen.Grpc.v1.SaveStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Saves the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SaveStateAsync(global::Dapr.Client.Autogen.Grpc.v1.SaveStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Saves the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> SaveStateAsync(global::Dapr.Client.Autogen.Grpc.v1.SaveStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Deletes the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteState(global::Dapr.Client.Autogen.Grpc.v1.DeleteStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Deletes the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty DeleteState(global::Dapr.Client.Autogen.Grpc.v1.DeleteStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Deletes the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteStateAsync(global::Dapr.Client.Autogen.Grpc.v1.DeleteStateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Deletes the state for a specific key.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> DeleteStateAsync(global::Dapr.Client.Autogen.Grpc.v1.DeleteStateRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Executes transactions for a specified store
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty ExecuteStateTransaction(global::Dapr.Client.Autogen.Grpc.v1.ExecuteStateTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Executes transactions for a specified store
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty ExecuteStateTransaction(global::Dapr.Client.Autogen.Grpc.v1.ExecuteStateTransactionRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Executes transactions for a specified store
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExecuteStateTransactionAsync(global::Dapr.Client.Autogen.Grpc.v1.ExecuteStateTransactionRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Executes transactions for a specified store
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> ExecuteStateTransactionAsync(global::Dapr.Client.Autogen.Grpc.v1.ExecuteStateTransactionRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Publishes events to the specific topic.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty PublishEvent(global::Dapr.Client.Autogen.Grpc.v1.PublishEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Publishes events to the specific topic.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Google.Protobuf.WellKnownTypes.Empty PublishEvent(global::Dapr.Client.Autogen.Grpc.v1.PublishEventRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Publishes events to the specific topic.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PublishEventAsync(global::Dapr.Client.Autogen.Grpc.v1.PublishEventRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Publishes events to the specific topic.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Google.Protobuf.WellKnownTypes.Empty> PublishEventAsync(global::Dapr.Client.Autogen.Grpc.v1.PublishEventRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Invokes binding data to specific output bindings
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingResponse InvokeBinding(global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Invokes binding data to specific output bindings
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingResponse InvokeBinding(global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Invokes binding data to specific output bindings
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingResponse> InvokeBindingAsync(global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Invokes binding data to specific output bindings
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingResponse> InvokeBindingAsync(global::Dapr.Client.Autogen.Grpc.v1.InvokeBindingRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets secrets from secret stores.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetSecretResponse GetSecret(global::Dapr.Client.Autogen.Grpc.v1.GetSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }
        /// <summary>
        /// Gets secrets from secret stores.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="options">The options for the call.</param>
        /// <returns>The response received from the server.</returns>
        public virtual global::Dapr.Client.Autogen.Grpc.v1.GetSecretResponse GetSecret(global::Dapr.Client.Autogen.Grpc.v1.GetSecretRequest request, grpc::CallOptions options)
        {
            return null;
        }
        /// <summary>
        /// Gets secrets from secret stores.
        /// </summary>
        /// <param name="request">The request to send to the server.</param>
        /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
        /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
        /// <param name="cancellationToken">An optional token for canceling the call.</param>
        /// <returns>The call object.</returns>
        public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetSecretResponse> GetSecretAsync(global::Dapr.Client.Autogen.Grpc.v1.GetSecretRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
        {
            return null;
        }

        /// <summary>
      /// Gets secrets from secret stores.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Dapr.Client.Autogen.Grpc.v1.GetSecretResponse> GetSecretAsync(global::Dapr.Client.Autogen.Grpc.v1.GetSecretRequest request, grpc::CallOptions options)
      {
        return null;
      }




    }
}
